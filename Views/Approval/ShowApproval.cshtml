@model ApprovalPortal.Models.ApprovalHeader
@{
    ViewBag.Title = "ShowApproval";
    Layout = "~/Views/Shared/AdminLTE/_Layout.cshtml";
}



<script src="//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>

<script type="text/javascript">
    //$(document).ready(function () {
    //    var selectedAction = $('input[name=ApproverAction]:checked').val();
    //    // alert(selectedAction);
    //    ToggleSendbackForRework(selectedAction);
    //});
    $(document).ready(function () {
        $("#ddlFinalEmailList").selectize();
        $("#dddlSendBackForRework").selectize();

    });

    function ConfirmDelete() {
        return confirm("Are you sure you want to delete the Record?");
    }

    $('#btnSubmit').click(function () {

    });

    $('#ApproverAction').change(function () {
        alert('asdsd');
    });


    function ValidateData() {
        var selectedAction = $('input[name=ApproverAction]:checked').val()
        if (selectedAction == 3) {
            var selectedUser = $("#ddlSendBackForRework").val();
            if (selectedUser == "") {
                alert('Please select user to Rework.');
                return false;
            }
        }
        if (selectedAction == 2) {
            var cnf2 = confirm("Are you sure you want to Reject the Approval?");
            if (cnf2 == false) {
                return false;
            }
        }

        //alert($('#ddlFinalEmailList').val());

        if ($('#ddlFinalEmailList').val() == null) {
            alert('Please Select Final Email List.');
            return false;
        }
        if ($('#txtRemark').val() == "") {
            alert('Please Enter Remarks.');
            return false;
        }

        if (typeof (selectedAction) === "undefined") {
            alert('Please Select Action.');
            return false;
        }
        ShowLoader();
        return true;
       // return false;
    }



    function SubmitRequest(app_Id) {

        var action = $("#ddlActionMaster").val();
        var remarks = $("#txtRemark").val();

        if (action == "0" || remarks == "") {
            MyAlert("Please select action/ enter remarks");
            return false;
        }
        //alert(SiteUrl);
        //alert(action);
        //alert(remarks);
        debugger;
        var cnf = confirm("Are you sure you want to Submit the Record?");
        if (cnf) {

            if (action == 2) {
                var cnf = confirm("Are you sure you want to Reject the Approval?");
                if (cnf == false) {
                    return false;
                }
            }
            $.ajax({

                //url: appURL + "/RequestApproval/Approve",
                url: SiteUrl + "/Approval/Approve",
                type: "POST",
                data: JSON.stringify({ 'app_Id': app_Id, 'action': action, 'remark': remarks }),
                dataType: "json",
                traditional: true,
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    if (data.status == "Success") {
                        MyAlert(data.message);
                    } else {
                        MyAlert(data.message);
                    }
                },
                error: function () {
                    MyAlert("An error has occured!!!");
                }
            });

        }
        return cnf;
    }


    function AppoverAction(ctrl) {
        var val = $(ctrl).val();
        // alert(val);
        ToggleSendbackForRework(val);

    }

    function ToggleSendbackForRework(selectedAction) {
        if (selectedAction == 3) {
            $('#trSendbackForRework').css("display", "block");
            $("#dddlSendBackForRework").selectize();
        }
        else {
            $('#trSendbackForRework').css("display", "none");
        }
    }

    function OpenCloseGroup(groupID) {
        //var TR = document.getElementByName(groupID);
        var TRs = document.getElementsByName(groupID);
        debugger;
        // alert(TRs.length);
        var i;
        for (i = 0; i < TRs.length; i++) {
            $(TRs[i]).toggle();
        }
    }
</script>


<style>
    .page-break {
        page-break-after: always;
        page-break-inside: avoid;
        clear: both;
    }

    .page-break-before {
        page-break-before: always;
        page-break-inside: avoid;
        clear: both;
    }
</style>


<div class="container" style="font-family: Calibri;">
    @using (Html.BeginForm("Approve", "Approval", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @*<h4 class="breadcrumb" style="font-family: Calibri; font-size:smaller;"><a style="text-decoration: none" href="@Url.Action("Index", "Approval")">Home</a> &raquo;<a style="text-decoration: none" href="@Url.Action("Index", "Approver")">Request</a> &raquo; My Requests   </h4>*@
        <h4>   </h4>
        @Html.ValidationSummary(true)
        <fieldset>


            <div id="divFactsheetForPrint">@Html.Partial("_VwApprovalDataRO", @Model)</div>
            <button type="button" onclick="generate()" style="display:none;">Generate PDF</button>
            @Html.HiddenFor(x=>x.APP_PendingWith)
        @if (Model.IsActionable)
        {
        <div class="navbar-collapse" style="padding-left: 1px !important; width: 946px !important;">
            <table class="table-condensed table-striped table-hover dataTable responsive nowrap table-bordered" >
                <tr>
                    <th colspan="2" class="TableHeader" style="width: 60%; padding: .75rem; vertical-align: top; padding-left:20px;">
                        Approver Section

                    </th>

                </tr>
                <tr>
                    <td style="width: 20%; vertical-align: top; padding-left: 10px">
                        Action<span style="color:red">*</span>
                    </td>
                    <td style="width:80%">
                        <table>
                            <tr>
                                <td style="width:60%">
                                    <table>
                                        <tr>
                                            <td style="padding:10px">Approve @Html.RadioButtonFor(model => model.ApproverAction, 1, new { onclick = "AppoverAction(this);" })</td>
                                            @if (Model.UserRole == "Approver")
                                            {
                                                <td style="padding:10px">Reject @Html.RadioButtonFor(model => model.ApproverAction, 2, new { onclick = "AppoverAction(this);" })</td>
                                            }
                                            <td style="padding:10px"> Send Back @Html.RadioButtonFor(model => model.ApproverAction, 3, new { onclick = "AppoverAction(this);" })</td>
                                            @Html.ValidationMessageFor(model => model.ApproverAction, null, new { @class = "text-danger" })

                                        </tr>
                                    </table>
                                    <div>
                                        @*@Html.DropDownListFor(m => m.ApproverAction, new SelectList(ViewBag.ActionMaster, "Value", "Text", null), new { id = "ddlActionMaster", @class = "form-control", onchange = "AppoverAction(this);", style = "width: 200px;" })*@
                                    </div>
                                </td>
                                <td id="trSendbackForRework" style="width:40%;display:none">
                                    <div>
                                        @Html.DropDownListFor(m => m.SendBackForRework, new SelectList(ViewBag.SendBackForRework, "Value", "Text", null), "Select", new { id = "ddlSendBackForRework", @class = "form-control", style = "width: 200px;" })
                                    </div>
                                </td>
                            </tr>
                        </table>

                    </td>
                </tr>

                <tr>
                    <td style="width:10%; padding-left:10px">
                        Remarks<span style="color:red">*</span>
                    </td>
                    <td style="width:90%">
                        <div style="width:60%">
                            @Html.TextAreaFor(m => m.ApproverRemarks, new { id = "txtRemark", maxlength = 250, @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ApproverRemarks, null, new { @class = "text-danger" })
                        </div>
                    </td>
                </tr>

                <tr>
                    <td style="width:10%; padding-left:10px">
                        Final Email List<span style="color:red">*</span>
                    </td>
                    <td style="width:90%">
                        <div style="width:60%">
                            @*@Html.DropDownListFor(m => m.SelectedaFinalEmailUsers_Entry, new SelectList(ViewBag.FinalEmailList, "Value", "Text", null), "Select", new { id = "ddlFinalEmailList", @class = "form-control", @multiple = "multiple", @style = "width:100%;" })*@
                            @Html.ListBoxFor(m => m.SelectedaFinalEmailUsers_Entry, new SelectList(ViewBag.FinalEmailList, "Value", "Text", null), new { id = "ddlFinalEmailList", @class = "form-control", @multiple = "multiple", @style = "width:100%;" })

                            @Html.ValidationMessageFor(model => model.APP_ELId, null, new { @class = "text-danger" })
                        </div>
                    </td>
                </tr>
                <tr>

                    <td colspan="2" style="width:100%">
                        <div style="width:60%">
                            @if (Model.UserRole == "Reviewer")
                            {
                                <input class="btn btn-primary1" value="Review" name="command" type="submit" id="btnSubmit" onclick="return ValidateData();" />
                            }
                            else
                            {
                                <input class="btn btn-primary1" value="Submit" name="command" type="submit" id="btnSubmit" onclick="return ValidateData();" />
                            }



                        </div>
                    </td>
                </tr>
            </table>
        </div>
        }


        </fieldset>


    }
</div>
<div>

    @Html.ActionLink(
            "Back to Pending List",
            "ViewRequests",
            "Approval",
            routeValues: new
            {
                ReqType = "Pending",
            },
    htmlAttributes: null
)
</div>


<script src="~/Scripts/jspdf.min.js"></script>
<script>
    margins = {
        top: 10,
        bottom: 40,
        left: 30,
        width: 550
    };

    generate = function () {
        var pdf = new jsPDF('p', 'pt', 'a4');
        pdf.setFontSize(18);
        pdf.fromHTML(document.getElementById('divForPrint'),
            margins.left, // x coord
            margins.top,
            {
                // y coord
                width: margins.width// max width of content on PDF
            }, function (dispose) {
                headerFooterFormatting(pdf, pdf.internal.getNumberOfPages());
            },
            margins);

        var iframe = document.createElement('iframe');
        iframe.setAttribute('style', 'position:absolute;right:0; top:0; bottom:0; height:100%; width:650px; padding:20px;');
        document.body.appendChild(iframe);

        iframe.src = pdf.output('datauristring');
    };

    function headerFooterFormatting(doc, totalPages) {
        for (var i = totalPages; i >= 1; i--) {
            doc.setPage(i);
            //header
            //header(doc);

            footer(doc, i, totalPages);
            doc.page++;
        }
    };

    function footer(doc, pageNumber, totalPages) {

        var str = "Page " + pageNumber + " of " + totalPages

        doc.setFontSize(10);
        doc.text(str, margins.left, doc.internal.pageSize.height - 20);

    };

</script>

















